#!/nix/store/a8snvvh4jfad51maisjlrnxmix2f30ab-ruby-3.3.8/bin/ruby
#
# This file was generated by Nix.
#
# The application 'neovim-ruby-host' is installed as part of a gem, and
# this file is here to facilitate running it.
#

ENV["BUNDLE_GEMFILE"] = "/nix/store/69hczqqx0110z08hhc6m35jff0w0s7la-gemfile-and-lockfile/Gemfile"
ENV.delete 'BUNDLE_PATH'
ENV['BUNDLE_FROZEN'] = '1'
ENV['BUNDLE_IGNORE_CONFIG'] = '1'

Gem.paths = { 'GEM_HOME' => "/nix/store/kc3k2lbffc0g1lr5mkn1gjqb3gfvgfjx-neovim-ruby-env/lib/ruby/gems/3.3.0" }

$LOAD_PATH.unshift "/nix/store/3m89h3i7455l9vx4x4gs4yh7s2famd0g-bundler-2.6.9/lib/ruby/gems/3.3.0/gems/bundler-2.6.9/lib"

require 'bundler'
# Monkey-patch out the check that Bundler performs to determine
# whether the bundler env is writable. It's not writable, even for
# root! And for this use of Bundler, it shouldn't be necessary since
# we're not trying to perform any package management operations, only
# produce a Gem path. Thus, we replace it with a method that will
# always return false, to squelch a warning from Bundler saying that
# sudo may be required.
module Bundler
  class <<self
    def requires_sudo?
      return false
    end
  end
end
Bundler.setup()

load Gem.bin_path("neovim", "neovim-ruby-host")
